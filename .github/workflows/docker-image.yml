name: Publish images to Docker Hub

on:
  push:
    branches: [ develop, release-candidate, master, fix/docker_build_master ]
  workflow_dispatch: # manually triggered

jobs:
  push_js_ceramic:
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v2
      -
        name: Set branch name
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
      -
        name: Set sha tag
        run: |
          SHA_TAG=$(git rev-parse --short=12 "${{ github.sha }}")
          echo "SHA_TAG=$SHA_TAG" >> $GITHUB_ENV
      -
        name: Set master branch tag
        if: ${{ env.BRANCH == 'master' }}
        run: |
          echo "ENV_TAG=latest" >> $GITHUB_ENV
          echo "EVENT_WEBHOOK_URL=${{ secrets.EVENT_WEBHOOK_FIRE }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=ceramic-prod" >> $GITHUB_ENV
          echo "ECR_REPOSITORY_2=ceramic-prod-ex" >> $GITHUB_ENV
      -
        name: Set rc branch tag
        if: ${{ env.BRANCH == 'release-candidate' }}
        run: |
          echo "ENV_TAG=tnet" >> $GITHUB_ENV
          echo "EVENT_WEBHOOK_URL=${{ secrets.EVENT_WEBHOOK_CLAY }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=ceramic-tnet" >> $GITHUB_ENV
          echo "ECR_REPOSITORY_2=ceramic-tnet-ex" >> $GITHUB_ENV
      -
        name: Set develop branch tag
        if: ${{ env.BRANCH == 'develop' }}
        run: |
          echo "ENV_TAG=dev" >> $GITHUB_ENV
          echo "EVENT_WEBHOOK_URL=${{ secrets.EVENT_WEBHOOK_DEV }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=ceramic-dev" >> $GITHUB_ENV
          echo "ECR_REPOSITORY_2=ceramic-dev-ex" >> $GITHUB_ENV
      -
        name: Set env tag (default)
        if: ${{ env.ENV_TAG == '' }}
        run: |
          echo "ENV_TAG=dev" >> $GITHUB_ENV
          echo "EVENT_WEBHOOK_URL=${{ secrets.EVENT_WEBHOOK_DEV }}" >> $GITHUB_ENV
      -
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      -
        name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # -
      #   name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build js-ceramic image
        env:
          IMAGE_ID: "ceramicnetwork/js-ceramic"
          ECR_IMAGE_ID: "${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}"
          ECR_IMAGE_ID_2: "${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_2 }}"
        run: |
          docker buildx build . --file Dockerfile.daemon \
            --output "type=image,push=true" \
            --tag ${{ env.ECR_IMAGE_ID }}:${{ env.ENV_TAG }} \
            --tag ${{ env.ECR_IMAGE_ID }}:${{ env.SHA_TAG }} \
            --tag ${{ env.ECR_IMAGE_ID }}:${{ github.sha }} \
            --tag ${{ env.ECR_IMAGE_ID }}:${{ env.BRANCH }} \
            --tag ${{ env.ECR_IMAGE_ID_2 }}:${{ env.ENV_TAG }} \
            --tag ${{ env.ECR_IMAGE_ID_2 }}:${{ env.SHA_TAG }} \
            --tag ${{ env.ECR_IMAGE_ID_2 }}:${{ github.sha }} \
            --tag ${{ env.ECR_IMAGE_ID_2 }}:${{ env.BRANCH }}
